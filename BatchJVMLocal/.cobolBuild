<?xml version="1.0" encoding="UTF-8"?>
<project name="BatchJVMLocal" default="cobolbuild" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
	<taskdef resource="com/microfocus/ant/antlib.xml"/>
	<!--  ***********************************  -->
	<!--  * General property initialisation *  -->
	<!--  ***********************************  -->
	<property name="pathVar.PROJECT_LOC" value="${basedir}"/>
	<property name="pathVar.WORKSPACE_LOC" value="${env.WORKSPACE_LOC}"/>
	<property name="pathVar.ECLIPSE_HOME" value="${env.ECLIPSE_HOME}"/>
	<property name="pathVar.PARENT_LOC" value="${env.PARENT_LOC}"/>
	<property environment="env"/>
	<property name="mf.projectLocation.BatchJVMLocal" value="${basedir}"/>
	<property name="mf.cfg" value="New_Configuration"/>
	<property name="mf.cfgtarget" value="cfg.${mf.cfg}"/>
	<property name="mf.forceCompile" value="true"/>
	<property name="mf.buildThreadCount" value="1"/>
	<property name="mf.useDirectiveSet" value="true"/>
	<property name="mf.settingsDir" value=".settings"/>
	<property name="mf.connectionName" value=""/>
	<property name="mf.projectName" value=""/>
	<property name="mf.failOnError" value="false"/>
	<property name="mf.cobolFailOnError" value="${mf.failOnError}"/>
	<property name="mf.sdkLocation" value="c:\Program Files (x86)\Windows Kits\10\Bin\10.0.17763.0\"/>
	<property name="mf.buildToolsLocation" value="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\Host"/>
	<target name="printLocations">
		<echo message="Project Location: &apos;pathVar.PROJECT_LOC&apos;=${pathVar.PROJECT_LOC}"/>
		<echo message="Project Location: &apos;pathVar.WORKSPACE_LOC&apos;=${pathVar.WORKSPACE_LOC}"/>
		<echo message="Project Location: &apos;pathVar.ECLIPSE_HOME&apos;=${pathVar.ECLIPSE_HOME}"/>
		<echo message="Project Location: &apos;pathVar.PARENT_LOC&apos;=${pathVar.PARENT_LOC}"/>
		<echo message="Project Location: &apos;project.BatchJVMLocal&apos;=${mf.projectLocation.BatchJVMLocal}"/>
	</target>
	<!--  ******************************  -->
	<!--  * OS-specific initialisation *  -->
	<!--  ******************************  -->
	<property name="pathVar.javaHome" value="C:/Program Files (x86)/Micro Focus/Enterprise Developer/AdoptOpenJDK"/>
	<condition property="windows">
		<os family="windows"/>
	</condition>
	<condition property="unix">
		<os family="unix"/>
	</condition>
	<ac:if>
		<isset property="windows"/>
		<then>
			<productlocation property="cobolJvmRuntimeSystemDir" dir="bin"/>
			<property name="mf.equalsInDir" value="="/>
			<property name="pathVar.pS" value=";"/>
			<property name="shell" value="cmd"/>
			<property name="shell.ext" value=".bat"/>
			<property name="shell.arg" value="/c"/>
			<property name="script.header" value="@rem MS-DOS Batch File"/>
		</then>
	</ac:if>
	<ac:if>
		<isset property="unix"/>
		<then>
			<productlocation property="cobolJvmRuntimeSystemDir" dir="lib"/>
			<property name="mf.equalsInDir" value="="/>
			<property name="pathVar.pS" value=":"/>
			<property name="shell" value="sh"/>
			<property name="shell.ext" value=".sh"/>
			<property name="shell.arg" value="-c"/>
			<property name="script.header" value="#!/bin/sh"/>
		</then>
	</ac:if>
	<!--  *****************************  -->
	<!--  * COBOL compiler directives *  -->
	<!--  *****************************  -->
	<!-- cobol_directive_set_1 -->
	<mfdirlist id="cobol_directive_set_1">
		<directive name="SOURCETABSTOP" id="sourcetabstop" value="4"/>
		<directive name="JVMCLASSPATH" value="&quot;${pathVar.javaHome}/jre/lib/resources.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/rt.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/jsse.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/jce.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/charsets.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/access-bridge-64.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/cldrdata.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/dnsns.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/jaccess.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/localedata.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/nashorn.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/sunec.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/sunjce_provider.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/sunmscapi.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/sunpkcs11.jar${pathVar.pS}${pathVar.javaHome}/jre/lib/ext/zipfs.jar${pathVar.pS}${cobolJvmRuntimeSystemDir}/mfcobol.jar${pathVar.pS}${cobolJvmRuntimeSystemDir}/mfle370.jar${pathVar.pS}${cobolJvmRuntimeSystemDir}/mfcobolrts.jar${pathVar.pS}${cobolJvmRuntimeSystemDir}/mfsqljvm.jar${pathVar.pS}${cobolJvmRuntimeSystemDir}/mfunit.jar${pathVar.pS}C:/demo/workspace/BatchLocalCopyProject/bin&quot;"/>
	</mfdirlist>
	<!--  **********************  -->
	<!--  * COBOL source files *  -->
	<!--  **********************  -->
	<!-- cobol_file_set_1 -->
	<mffilelist type="srcfile" id="cobol_file_set_1" srcdir="${basedir}">
		<file name="UDATECNV.CBL" srcdir="src"/>
		<file name="ZBNKPRT1.CBL" srcdir="src"/>
	</mffilelist>
	<!-- COBOL copybook locations -->
	<mffilelist id="cobol.copybook.locations">
		<path type="copybook" name="${mf.projectLocation.BatchJVMLocal}"/>
		<path type="copybook" name="${mf.projectLocation.BatchJVMLocal}/src"/>
		<path type="copybook" name="C:\demo\Source Code\BankDemoVSAM\CPY"/>
	</mffilelist>
	<!--  ********************************  -->
	<!--  * Source File Compile and Link *  -->
	<!--  ********************************  -->
	<!-- Configuration:New_Configuration -->
	<target name="FileCompile.New_Configuration.cobol">
		<cobol debug="true" configuration="New Configuration" analysisData="${analysisData}" threadCount="${mf.buildThreadCount}" settingsDir="${mf.settingsDir}" analysisDataDir="${analysisDataDir}" useDirectiveSet="${mf.useDirectiveSet}" srcfile="${fullFileName}" destdir="${basedir}/bin" is64bit="true" failonerror="${mf.cobolFailOnError}" srcdir="${basedir}" forceCompile="${mf.forceCompile}" connectionName="${mf.connectionName}" projectName="${mf.projectName}" desttype="jvm">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
		</cobol>
	</target>
	<!--  *************************  -->
	<!--  * Configuration targets *  -->
	<!--  *************************  -->
	<!-- cfg.New_Configuration -->
	<target name="cobolbuild.cfg.New_Configuration" depends="printLocations,pre.build.cfg.New_Configuration,nature.specific.build.cfg.New_Configuration,post.build.cfg.New_Configuration,deploy.cfg.New_Configuration"/>
	<target name="nature.specific.build.cfg.New_Configuration" depends="cobol.cfg.New_Configuration"/>
	<target name="cobol.cfg.New_Configuration" depends="cobol.compile.cfg.New_Configuration,cobol.link.cfg.New_Configuration"/>
	<target name="New_Configuration.FileCompile">
		<property name="fileextn.cbl" value="cobol"/>
		<property name="fileextn.cob" value="cobol"/>
		<property name="fileextn.pco" value="cobol"/>
		<property name="fileextn.sqb" value="cobol"/>
		<property name="fileextn.eco" value="cobol"/>
		<property name="fileextn.bms" value="bms"/>
		<property name="fileextn.mlc" value="asm"/>
		<property name="fileextn.asm" value="asm"/>
		<property name="fileextn.cap" value="asm"/>
		<property name="fileextn.lin" value="lin"/>
		<property name="fileextn.mac" value="macro"/>
		<property name="fileextn.cpy" value="macro"/>
		<property name="fileextn.jcl" value="jcl"/>
		<property name="fileextn.vse" value="jcl"/>
		<property name="fileextn.dbd" value="dbd"/>
		<property name="fileextn.psb" value="psb"/>
		<property name="fileextn.mfs" value="mfs"/>
		<property name="fileextn.rex" value="rexx"/>
		<property name="fileextn.rxf" value="rexx"/>
		<property name="fileextn.tso" value="clist"/>
		<property name="fileextn.ezt" value="easytrieve"/>
		<property name="fileextn.pli" value="pli"/>
		<property name="fileextn.pl1" value="pli"/>
		<ac:for list="${filesList}" param="filename" keepgoing="true" trim="true">
			<sequential>
				<ac:if>
					<not>
						<isset property="isCancelled"/>
					</not>
					<then>
						<propertyregex input="@{filename}" regexp="((.*[\\/])*)([^\.]*)\..*" select="\3" property="basename" casesensitive="false" override="true"/>
						<propertyregex input="@{filename}" regexp="((.*[\\/])*)([^\.]*)(\..*)" select="\4" property="filesuffix" casesensitive="false" override="true"/>
						<script classpath="${java.home}/lib/ext/nashorn.jar" language="javascript">project.setProperty("lowerFileSuffix", project.getProperty("filesuffix").toLowerCase());</script>
						<propertycopy name="targetSuffix" from="fileextn${lowerFileSuffix}" override="true"/>
						<ac:if>
							<equals arg2="lin" arg1="${targetSuffix}"/>
							<then>
								<ac:antcallback target="FileCompile.New_Configuration.${basename}${filesuffix}" inheritAll="true" return="isCancelled">
									<param name="fileBaseName" value="${basename}"/>
									<param name="fullFileName" value="@{filename}"/>
								</ac:antcallback>
							</then>
							<else>
								<ac:antcallback target="FileCompile.New_Configuration.${targetSuffix}" inheritAll="true" return="isCancelled">
									<param name="fileBaseName" value="${basename}"/>
									<param name="fullFileName" value="@{filename}"/>
								</ac:antcallback>
							</else>
						</ac:if>
					</then>
				</ac:if>
			</sequential>
		</ac:for>
	</target>
	<target name="cobol.compile.cfg.New_Configuration">
		<cobol debug="true" configuration="New Configuration" analysisData="${analysisData}" threadCount="${mf.buildThreadCount}" settingsDir="${mf.settingsDir}" analysisDataDir="${analysisDataDir}" useDirectiveSet="${mf.useDirectiveSet}" destdir="${basedir}/bin" is64bit="true" failonerror="${mf.cobolFailOnError}" forceCompile="${mf.forceCompile}" connectionName="${mf.connectionName}" projectName="${mf.projectName}" desttype="jvm">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
			<mffilelist refid="cobol_file_set_1"/>
		</cobol>
	</target>
	<target name="cobol.link.cfg.New_Configuration">
	</target>
	<target name="pre.build.cfg.New_Configuration">
	</target>
	<target name="post.build.cfg.New_Configuration">
	</target>
	<target name="deploy.cfg.New_Configuration">
	</target>
	<target name="clean.cfg.New_Configuration">
		<delete dir="${basedir}/bin"/>
	</target>
	<!--  *******************  -->
	<!--  * General targets *  -->
	<!--  *******************  -->
	<target name="clean">
		<antcall target="clean.${mf.cfgtarget}" inheritAll="true"/>
	</target>
	<target name="compileSource">
		<antcall target="${mf.cfg}.FileCompile" inheritAll="true"/>
	</target>
	<target name="compile" depends="compileSource">
	</target>
	<target name="cobolbuild" depends="clean">
		<antcall target="cobolbuild.${mf.cfgtarget}" inheritAll="true"/>
	</target>
</project>
